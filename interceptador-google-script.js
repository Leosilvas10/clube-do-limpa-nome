// INTERCEPTADOR DE REQUISI√á√ïES - Google Apps Script
// Execute este c√≥digo no console do browser antes de enviar formul√°rios

console.log('üéØ INTERCEPTADOR DE REQUISI√á√ïES ATIVADO');

// Interceptar todas as requisi√ß√µes fetch
const originalFetch = window.fetch;
window.fetch = function(...args) {
    const [url, config] = args;
    
    // Se for uma requisi√ß√£o para o Google Apps Script
    if (url && url.includes('script.google.com')) {
        console.log('üöÄ INTERCEPTADO: Requisi√ß√£o para Google Apps Script');
        console.log('üîó URL:', url);
        console.log('‚öôÔ∏è Configura√ß√£o:', config);
        
        if (config && config.body) {
            try {
                const dados = JSON.parse(config.body);
                console.log('üìã DADOS ENVIADOS:', dados);
            } catch (e) {
                console.log('üìã DADOS RAW:', config.body);
            }
        }
        
        // Executar a requisi√ß√£o original e interceptar a resposta
        return originalFetch.apply(this, args).then(response => {
            console.log('üìä RESPOSTA STATUS:', response.status);
            console.log('üìä RESPOSTA OK:', response.ok);
            
            // Clonar a resposta para poder ler o conte√∫do
            const clonedResponse = response.clone();
            clonedResponse.text().then(text => {
                console.log('üìù RESPOSTA CONTE√öDO:', text);
            }).catch(err => {
                console.log('‚ùå Erro ao ler resposta:', err);
            });
            
            return response;
        }).catch(error => {
            console.error('üí• ERRO NA REQUISI√á√ÉO:', error);
            throw error;
        });
    }
    
    // Para outras requisi√ß√µes, executar normalmente
    return originalFetch.apply(this, args);
};

console.log('‚úÖ Interceptador ativado! Agora envie um formul√°rio para ver os logs detalhados.');
console.log('üìå Todas as requisi√ß√µes para Google Apps Script ser√£o interceptadas e logadas.');

// Fun√ß√£o adicional para testar a URL atual do .env
function testarUrlAtualDoEnv() {
    // Tentar acessar as vari√°veis de ambiente do Next.js
    const urlScript = process?.env?.NEXT_PUBLIC_GOOGLE_SCRIPT_URL;
    
    if (urlScript) {
        console.log('üîó URL encontrada no processo:', urlScript);
        
        if (urlScript.includes('AKfycbxuS0fTnh3fW-boD9oInxtN7WpFhRNvZgU1_VxUdLzxylhf9GxVL0tG6znK5lWP83jgA')) {
            console.log('‚úÖ URL est√° atualizada com a nova vers√£o');
        } else {
            console.log('‚ö†Ô∏è URL parece ser a vers√£o antiga');
        }
    } else {
        console.log('‚ùå N√£o foi poss√≠vel acessar a URL do .env no browser');
        console.log('üí° Isso √© normal - as vari√°veis de ambiente s√£o processadas no servidor');
    }
}

testarUrlAtualDoEnv();
